@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix eg: <http://www.example.org/> .
@prefix egdt: <http://example.org/simpleTypes#> .
@prefix xsd: <http://www.example.org/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix eth: <http://example.org/ethereum/> .

eth:Block a rdfs:Class ;
    rdfs:label "Block" ;
    rdfs:comment "An Ethereum block in the blockchain" .

eth:Address a rdfs:Class ;
    rdfs:label "Address" ;
    rdfs:comment "An Ethereum address" .

eth:number a rdfs:Property ;
    rdfs:label "number" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:integer ;
    rdfs:comment "The block number in the Ethereum blockchain" .

eth:hash a rdfs:Property ;
    rdfs:label "hash" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "The unique hash of the block, serving as its identifier" .

eth:parentHash a rdfs:Property ;
    rdfs:label "parentHash" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "The hash of the block's immediate parent" .

eth:nonce a rdfs:Property ;
    rdfs:label "nonce" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "The nonce value used in the Proof-of-Work algorithm" .

eth:sha3Uncles a rdfs:Property ;
    rdfs:label "sha3Uncles" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "The SHA3 hash of the uncle blocks included in the block" .

eth:logsBloom a rdfs:Property ;
    rdfs:label "logsBloom" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "The logs bloom data structure for efficient searching of logs generated by the EVM during contract execution" .

eth:transactionsRoot a rdfs:Property ;
    rdfs:label "transactionsRoot" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "The root of the Merkle tree containing all transactions included in the block" .

eth:stateRoot a rdfs:Property ;
    rdfs:label "stateRoot" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "The root of the Merkle tree representing the world state after applying all transactions in the block" .

eth:receiptsRoot a rdfs:Property ;
    rdfs:label "receiptsRoot" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "The root of the Merkle tree containing all transaction receipts generated by the block" .

eth:gasUsed a rdfs:Property ;
    rdfs:label "gasUsed" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:integer ;
    rdfs:comment "The total amount of gas used by all transactions in the block" .

eth:gasLimit a rdfs:Property ;
    rdfs:label "gasLimit" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:integer ;
    rdfs:comment "The maximum amount of gas that can be used by transactions in the block" .

eth:difficulty a rdfs:Property ;
    rdfs:label "difficulty" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:integer ;
    rdfs:comment "The difficulty target for the Proof-of-Work algorithm for this block" .

eth:timestamp a rdfs:Property ;
    rdfs:label "timestamp" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:dateTime ;
    rdfs:comment "The Unix timestamp when the block was mined" .

eth:extraData a rdfs:Property ;
    rdfs:label "extraData" ;
    rdfs:domain eth:Block ;
    rdfs:range xsd:string ;
    rdfs:comment "A variable-length field that can store arbitrary data provided by the miner" .

eth:miner a rdfs:Property ;
    rdfs:label "miner" ;
    rdfs:domain eth:Block ;
    rdfs:range eth:Address ;
    rdfs:comment "The address of the miner who mined the block" .

eth:address a rdfs:Property ;
    rdfs:label "address" ;
    rdfs:domain eth:Address ;
    rdfs:range xsd:string ;
    rdfs:comment "The address of an ethereum account" .
